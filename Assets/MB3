using UnityEngine;
using System;
using System.Collections;
using TreeSharpPlus;

public class MB3 : MonoBehaviour
{
	public Transform wander1;
	public Transform wander2;
	public Transform wander3;
	public GameObject participant;
	public GameObject participant2;
	public GameObject participant3;
	public Val<Vector3> pos;
	private BehaviorAgent behaviorAgent;
	// Use this for initialization
	void Start ()
	{
		behaviorAgent = new BehaviorAgent (this.BuildTreeRoot ());
		BehaviorManager.Instance.Register (behaviorAgent);
		behaviorAgent.StartBehavior ();
	}
	
	// Update is called once per frame
	void Update ()
	{
	
	}

	protected Node ST_ApproachAndWait(Transform target)
	{
		Val<Vector3> position = Val.V (() => target.position);
		return new Sequence( participant.GetComponent<BehaviorMecanim>().Node_GoTo(position), new LeafWait(1000));
		Debug.Log("ssasdas");
	
	}
	public Node ST_ApproachAndWait2(Transform target)
	{
		Val<Vector3> position = Val.V (() => target.position);
		return new Sequence( participant2.GetComponent<BehaviorMecanim>().Node_GoTo(position), new LeafWait(0));
	
	}

	
	protected Node ST_ApproachAndWait3(Transform target)
	{
		Val<Vector3> position = Val.V (() => target.position);
		return this.ST_ApproachAndWait2(target);
	//	return new Sequence( participant3.GetComponent<BehaviorMecanim>().Node_GoTo(position), new LeafWait(0));
	
	}




	protected Node BuildTreeRoot()
	{
		Node roaming = new DecoratorLoop (
						new SequenceShuffle(
						//this.ST_ApproachAndWait(this.wander1),
						//this.ST_ApproachAndWait(this.wander2),
						//this.ST_ApproachAndWait(this.wander3),
						//this.ST_ApproachAndWait2(this.wander1),
						//this.ST_ApproachAndWait2(this.wander2),
						//this.ST_ApproachAndWait2(this.wander3),
						//this.ST_ApproachAndWait3(this.wander1),
						//this.ST_ApproachAndWait3(this.wander2),
						this.ST_ApproachAndWait3(this.wander1)));
						
		Debug.Log("ssasdas");
		return roaming;
	}
}
